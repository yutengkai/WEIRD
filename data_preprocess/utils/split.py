# -*- coding: utf-8 -*-
"""split.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uOroPkUQ2e6PckNRe2t6NKTlvZxKs7Kz
"""

!pip install datasets -q
from datasets import load_dataset
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split

labels = load_dataset("fever", name='v1.0', split='train')
labels_df = labels.to_pandas()
true_false_claims = labels_df[(labels_df.label=='REFUTES') | (labels_df.label=='SUPPORTS')][['claim', 'evidence_wiki_url', 'label']].copy()
del labels_df

wiki = load_dataset("fever", name='wiki_pages')
wiki_df = wiki['wikipedia_pages'].to_pandas()
wiki_id_text_df = wiki_df[['id', 'text']].copy()
del wiki_df
wiki_id_text_df.columns = ['evidence_wiki_url', 'text']

joint_df = pd.merge(true_false_claims, wiki_id_text_df, on='evidence_wiki_url')
del true_false_claims
del wiki_id_text_df
joint_df = joint_df.drop_duplicates().reset_index(drop=True)

# bartSet, bertAndTestSet = train_test_split(joint_df, test_size=0.4, random_state=42)
# bertSet, testSet = train_test_split(bertAndTestSet, test_size=0.25, random_state=42)

groups = joint_df.groupby('text')
wiki_texts = joint_df['text'].unique()
np.random.shuffle(wiki_texts)

total_size = len(joint_df)
bart_set_size = int(total_size * 0.6)
bert_set_size = int(total_size * 0.3)
test_set_size = total_size - (bart_set_size + bert_set_size)

bart_set = pd.DataFrame()
bert_set = pd.DataFrame()
test_set = pd.DataFrame()

for text in wiki_texts:
    group = groups.get_group(text)
    
    if len(bart_set) < bart_set_size:
        bart_set = pd.concat([bart_set, group])
    elif len(bert_set) < bert_set_size:
        bert_set = pd.concat([bert_set, group])
    else:
        test_set = pd.concat([test_set, group])

bart_set.reset_index(drop=True, inplace=True)
bert_set.reset_index(drop=True, inplace=True)
test_set.reset_index(drop=True, inplace=True)

print("Whole dataset size:",len(joint_df))
print("BART set size:", len(bart_set))
print("BERT set size:", len(bert_set))
print("Test set size:", len(test_set))

bart_set.head()

bart_set2 = bart_set[bart_set.label=='SUPPORTS'].copy()
del bart_set
print("New BART set size:", len(bart_set2))
bart_set2.head()